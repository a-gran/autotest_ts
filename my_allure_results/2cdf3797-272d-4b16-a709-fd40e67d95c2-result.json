{"name": "test_screenplay1", "status": "broken", "statusDetails": {"message": "TypeError: unsupported operand type(s) for +: 'WebElement' and 'int'", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f46f70c153824438fd8755f8320589a0\")>\n\n    def test_screenplay1(browser):\n        browser.get(URL_SBIS)\n        main_sbis_page = MainSbisPage(browser)\n    \n        original_page_handler = browser.current_window_handle\n        contacts = main_sbis_page.find_contacts_sbis_page()\n    \n        assert contacts.text == 'Контакты', 'Unexpected text'\n    \n        main_sbis_page.go_to_contacts_sbis_page()\n    \n        contacts_sbis_page = ContactsSbisPage(browser)\n        tensor_banner = contacts_sbis_page.find_tensor_banner()\n        tensor_banner_title = tensor_banner.get_attribute('title')\n    \n        assert tensor_banner_title == 'tensor.ru', 'Unexpected title'\n    \n        contacts_sbis_page.go_to_tensor_main_page()\n    \n        _switch_to_another_handler(browser, original_page_handler)\n    \n        tensor_main_page = TensorMainPage(browser)\n        people_power = tensor_main_page.get_people_power()\n        browser.execute_script(\"arguments[0].scrollIntoView();\", people_power)\n    \n        assert people_power.text == 'Сила в людях', 'Unexpected text'\n    \n        more = tensor_main_page.get_more()\n        browser.execute_script(\"arguments[0].scrollIntoView();\", more)\n    \n        assert more.text == 'Подробнее', 'Unexpected link text'\n    \n        tensor_main_page.go_to_tensor_about_page()\n    \n        tensor_about_page = TensorAboutPage(browser)\n        works = tensor_about_page.get_works()\n        browser.execute_script(\"arguments[0].scrollIntoView();\", works)\n    \n        assert works.text == 'Работаем', 'Unexpected text'\n    \n        images_list = tensor_about_page.get_images()\n    \n>       res = _is_correct_width_height(images_list)\n\ntests\\test_refactored.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nimages_list = [<selenium.webdriver.remote.webelement.WebElement (session=\"f46f70c153824438fd8755f8320589a0\", element=\"f.BE29CA016F9D...f70c153824438fd8755f8320589a0\", element=\"f.BE29CA016F9DFF7CCF9D9682ECD18B78.d.044B0C57D436FD6146CD7F400034E902.e.44\")>]\n\n    def _is_correct_width_height(images_list):\n        widths = 0\n        heights = 0\n        for image in images_list:\n            image_width = image.get_attribute('width')\n>           if image_width[image + 1] == image_width[image]:\nE           TypeError: unsupported operand type(s) for +: 'WebElement' and 'int'\n\ntests\\test_refactored.py:21: TypeError"}, "start": 1718221316214, "stop": 1718221326480, "uuid": "a07711fc-263e-4a08-8146-c40c5cc4add2", "historyId": "7bbe28ce858a521ad2c8067552d56b3c", "testCaseId": "7bbe28ce858a521ad2c8067552d56b3c", "fullName": "tests.test_refactored#test_screenplay1", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_refactored"}, {"name": "host", "value": "ar"}, {"name": "thread", "value": "14208-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_refactored"}]}