{"name": "test_screenplay1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: Can't find elements by locator", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"838c038f1d104340b1c72c7818c81613\")>\n\n    def test_screenplay1(browser):\n        browser.get(URL_SBIS)\n        main_sbis_page = MainSbisPage(browser)\n    \n        original_page_handler = browser.current_window_handle\n        contacts = main_sbis_page.find_contacts_sbis_page()\n    \n        assert contacts.text == 'Контакты', 'Unexpected text'\n    \n        main_sbis_page.go_to_contacts_sbis_page()\n    \n        contacts_sbis_page = ContactsSbisPage(browser)\n        tensor_banner = contacts_sbis_page.find_tensor_banner()\n        tensor_banner_title = tensor_banner.get_attribute('title')\n    \n        assert tensor_banner_title == 'tensor.ru', 'Unexpected title'\n    \n        contacts_sbis_page.go_to_tensor_main_page()\n    \n        _switch_to_another_handler(browser, original_page_handler)\n    \n        tensor_main_page = TensorMainPage(browser)\n        people_power = tensor_main_page.get_people_power()\n        browser.execute_script(\"arguments[0].scrollIntoView();\", people_power)\n    \n        assert people_power.text == 'Сила в людях', 'Unexpected text'\n    \n        more = tensor_main_page.get_more()\n        browser.execute_script(\"arguments[0].scrollIntoView();\", more)\n    \n        assert more.text == 'Подробнее', 'Unexpected link text'\n    \n        tensor_main_page.go_to_tensor_about_page()\n    \n        tensor_about_page = TensorAboutPage(browser)\n        works = tensor_about_page.get_works()\n        browser.execute_script(\"arguments[0].scrollIntoView();\", works)\n    \n        assert works.text == 'Работаем', 'Unexpected text'\n    \n        images_block = tensor_about_page.get_images_block()\n        browser.execute_script(\"arguments[0].scrollIntoView();\", images_block)\n    \n>       images_list = tensor_about_page.get_images()\n\ntests\\test_refactored.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\tensor_about_page.py:15: in get_images\n    images_list = self.find_elements(TensorAboutPageLocators.IMAGES_LIST)\ntests\\base_page.py:13: in find_elements\n    return WebDriverWait(self.driver, timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"838c038f1d104340b1c72c7818c81613\")>\nmethod = <function presence_of_all_elements_located.<locals>._predicate at 0x000001FD76EBE290>\nmessage = \"Can't find elements by locator\"\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: Can't find elements by locator\n\n.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "start": 1718221710193, "stop": 1718221725509, "uuid": "78a1789a-f370-4a80-ab13-016625f4e426", "historyId": "7bbe28ce858a521ad2c8067552d56b3c", "testCaseId": "7bbe28ce858a521ad2c8067552d56b3c", "fullName": "tests.test_refactored#test_screenplay1", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_refactored"}, {"name": "host", "value": "ar"}, {"name": "thread", "value": "14896-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_refactored"}]}