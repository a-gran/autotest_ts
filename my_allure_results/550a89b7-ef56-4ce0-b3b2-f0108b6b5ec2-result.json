{"name": "test_banner", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"contacts_clients\"]/div[1]/div/div/div[2]/div/a\"}\n  (Session info: chrome=126.0.6478.55); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF684383E62+31618]\n\t(No symbol) [0x00007FF6842FB0C9]\n\t(No symbol) [0x00007FF6841B888A]\n\t(No symbol) [0x00007FF684208524]\n\t(No symbol) [0x00007FF68420862C]\n\t(No symbol) [0x00007FF68424F787]\n\t(No symbol) [0x00007FF68422D14F]\n\t(No symbol) [0x00007FF68424CA80]\n\t(No symbol) [0x00007FF68422CEB3]\n\t(No symbol) [0x00007FF6841FA46B]\n\t(No symbol) [0x00007FF6841FB001]\n\tGetHandleVerifier [0x00007FF68468A03D+3202397]\n\tGetHandleVerifier [0x00007FF6846D6A5D+3516285]\n\tGetHandleVerifier [0x00007FF6846CC4D0+3473904]\n\tGetHandleVerifier [0x00007FF684435D66+760454]\n\t(No symbol) [0x00007FF684306B6F]\n\t(No symbol) [0x00007FF684301D04]\n\t(No symbol) [0x00007FF684301E92]\n\t(No symbol) [0x00007FF6842F123F]\n\tBaseThreadInitThunk [0x00007FFD5A1C7034+20]\n\tRtlUserThreadStart [0x00007FFD5BF226A1+33]", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e16477030aca34bc4ae7db599f001984\")>\n\n    def test_banner(browser):\n        browser.get(URL)\n        original_page_handler = browser.current_window_handle\n        contacts = browser.find_element(By.CSS_SELECTOR, 'a[href=\"/contacts\"].sbisru-Header__menu-link')\n    \n        assert contacts.text == 'Контакты', 'Unexpected text'\n    \n>       tensor_banner = browser.find_element(By.XPATH, '//*[@id=\"contacts_clients\"]/div[1]/div/div/div[2]/div/a')\n\ntests\\test_refactored.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000020579FA4880>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF6842F123F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFD5A1C7034+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFD5BF226A1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"contacts_clients\"]/div[1]/div/div/div[2]/div/a\"}\nE         (Session info: chrome=126.0.6478.55); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF684383E62+31618]\nE       \t(No symbol) [0x00007FF6842FB0C9]\nE       \t(No symbol) [0x00007FF6841B888A]\nE       \t(No symbol) [0x00007FF684208524]\nE       \t(No symbol) [0x00007FF68420862C]\nE       \t(No symbol) [0x00007FF68424F787]\nE       \t(No symbol) [0x00007FF68422D14F]\nE       \t(No symbol) [0x00007FF68424CA80]\nE       \t(No symbol) [0x00007FF68422CEB3]\nE       \t(No symbol) [0x00007FF6841FA46B]\nE       \t(No symbol) [0x00007FF6841FB001]\nE       \tGetHandleVerifier [0x00007FF68468A03D+3202397]\nE       \tGetHandleVerifier [0x00007FF6846D6A5D+3516285]\nE       \tGetHandleVerifier [0x00007FF6846CC4D0+3473904]\nE       \tGetHandleVerifier [0x00007FF684435D66+760454]\nE       \t(No symbol) [0x00007FF684306B6F]\nE       \t(No symbol) [0x00007FF684301D04]\nE       \t(No symbol) [0x00007FF684301E92]\nE       \t(No symbol) [0x00007FF6842F123F]\nE       \tBaseThreadInitThunk [0x00007FFD5A1C7034+20]\nE       \tRtlUserThreadStart [0x00007FFD5BF226A1+33]\n\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "start": 1718216364536, "stop": 1718216368061, "uuid": "3352b79e-a39d-4dd1-9710-f11c54c9dca1", "historyId": "72ff3b479745ee3b8513ea2bf99d7404", "testCaseId": "72ff3b479745ee3b8513ea2bf99d7404", "fullName": "tests.test_refactored#test_banner", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_refactored"}, {"name": "host", "value": "ar"}, {"name": "thread", "value": "6700-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_refactored"}]}